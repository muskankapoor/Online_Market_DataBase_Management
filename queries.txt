Load data:

First, we create 9 tables
create table customers (cid int auto_increment primary key, username varchar(20), email varchar(50), passowrd varchar(20), phone varchar(15));
create table address (cid int auto_increment primary key, street_address varchar(50), state varchar(30), zipcode varchar(10));
create table items (barcode_id int auto_increment primary key , item_name varchar(20), img_url varchar(200), department varchar(20), taxable varchar(5), unit_price double, price_unit varchar(5), case_price double, num_lb_in_case double, cases_in_stock int, remain_not_in_case double);
create table company(company_id int auto_increment primary key, item_company_name varchar(20), item_company_phone varchar (20));
create table item_company_key (barcode_id int, company_id int);
create table shoppingcart(cid int, barcode_id int, quantity double);
create table purchase (purchase_id int auto_increment primary key, barcode_id int, quantity double);
create table transaction (purchase_id int auto_increment primary key, payment_date timestamp default current_timestamp, total_price double);
create table purchase_history (purchase_id  int auto_increment primary key, cid int);




Insert items into item table:
insert into items (item_name, img_url, department, taxable, unit_price, price_unit, case_price, num_lb_in_case, cases_in_stock, remain_not_in_case) values ('Apple'  , 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSp89ikEgfC2Y5HxhUTB5Tz1ilCzCRIq8yY3UXt19BXahpghGTPm0Kr5l-ANN0Dlxg-IHSrqBNZ&usqp=CAc','Fruit'    , 'No'  , 0.6  ,'Each' ,   16 ,  30 , 25 ,   18 ),('Bounty'    ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSiL4Gqt_Pmr5hXWxjakXdu0cDdVxGFvo7rOniatg9jtJ_xjpgL6H9wtNOvYAddjdoz5JmetRw&usqp=CAc','Grocery'  , 'Yes' , 4.99 ,'Each' ,   52 ,  12 , 18 ,   10 ),('Raddish'   ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRf0D--PDlAmJNTi-_z9rdSjlTZWcrziQWDCKuUpC_VTLYLdsV2&usqp=CAU', 'Veg'      , 'No'  , 1.29 ,'lb'   ,   23 ,  20 , 12 ,15.27 ),('Braccoli'  ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqqi9FXbF5W17YJWTK3OHB9YC_ZC7yK46PVLW-K1ybJczVLzOP&usqp=CAU', 'Veg'      , 'No'  , 1.99 ,'lb'   ,   35 ,  20 , 10 ,  5.3 ),('Toast'     ,'https://www.jongerius-int.com/image/Toast-Speedbag10769_Cop5686.jpg', 'Grocery'  , 'No'  , 2.99 ,'Each' , 13.5 ,   5 , 11 ,    2 );
insert into company (item_company_name, item_company_phone) values ('AAA', '7189991011'),('BBB', '7182411013'),('CCC', '7189871837'),('DDD', '7180971011'),('EEE', '7180938761');



# insert data into 9 tables
insert into items (item_name, img_url, department, taxable, unit_price, price_unit, case_price, num_lb_in_case, cases_in_stock, remain_not_in_case) values ('Apple'  , 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSp89ikEgfC2Y5HxhUTB5Tz1ilCzCRIq8yY3UXt19BXahpghGTPm0Kr5l-ANN0Dlxg-IHSrqBNZ&usqp=CAc','Fruit'    , 'No'  , 0.6  ,'Each' ,   16 ,  30 , 25 ,   18 ),('Bounty'    ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSiL4Gqt_Pmr5hXWxjakXdu0cDdVxGFvo7rOniatg9jtJ_xjpgL6H9wtNOvYAddjdoz5JmetRw&usqp=CAc','Grocery'  , 'Yes' , 4.99 ,'Each' ,   52 ,  12 , 18 ,   10 ),('Raddish'   ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRf0D--PDlAmJNTi-_z9rdSjlTZWcrziQWDCKuUpC_VTLYLdsV2&usqp=CAU', 'Veg'      , 'No'  , 1.29 ,'lb'   ,   23 ,  20 , 12 ,15.27 ),('Braccoli'  ,'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqqi9FXbF5W17YJWTK3OHB9YC_ZC7yK46PVLW-K1ybJczVLzOP&usqp=CAU', 'Veg'      , 'No'  , 1.99 ,'lb'   ,   35 ,  20 , 10 ,  5.3 ),('Toast'     ,'https://www.jongerius-int.com/image/Toast-Speedbag10769_Cop5686.jpg', 'Grocery'  , 'No'  , 2.99 ,'Each' , 13.5 ,   5 , 11 ,    2 );
insert into company (item_company_name, item_company_phone) values ('AAA', '7189991011'),('BBB', '7182411013'),('CCC', '7189871837'),('DDD', '7180971011'),('EEE', '7180938761');
insert into item_company_key (barcode_id, company_id) values (1,1), (2,3), (4,5), (3,4), (5,2);


insert into customers (username, email , passowrd, phone) values ('Ju', '123@gmail.com' ,'12345678', '1234567891'),('JY', '1213@gmail.com' ,'1234567809','12345678'),('Ju1','12345@gmail.com' ,'12345678','8769739183')    ,('Jy', '1234567@gmail.com','12345671','2345678')    ,('oiu', '097@gmail.com','12345678','0975431873');
insert into address (street_address,state,zipcode) values ('1010 Avenue' ,'NY' ,'11234'),('Jackson Avenue' ,'CA' ,'11111'),('10-12 34th avenue' ,'TX' ,'21332'),('64-01 Jersey City' ,'NJ' ,'20001'),('112-98 NEW AVE  PIO' ,'NY' ,'11562');


insert into shoppingcart values (1,1,3),(1,2,5),(1,3,5),(1,4,5);
insert into purchase_history (purchase_id , transaction_id ) values (1,1), (2,2),(3,3),(4,4),(5,5), (6,6),(7,7),(8,8),(9,9),(10,10),(11,11),(12,12),(13,13),(14,14),(15,15),(16,16),(17,17),(18,18),(19,19),(20,20);
insert into transaction (cid, payment_date, total_price) values (1,'2020-04-23 22:46:27', 3.98),(1,'2020-04-23 22:46:27', 4.99),(1,'2020-04-23 22:46:28', 2.58),(1,'2020-04-23 22:47:23', 4.99),(1,'2020-04-26 00:38:22', 2.58),(3,'2020-04-26 20:04:06',3.6),(3,'2020-04-26 20:04:06' ,5.97),(3,'2020-04-26 20:04:06',9.98),(1,'2020-04-26 20:11:26',3.98),(3,'2020-04-23 22:46:22',11.94),(3,'2020-03-23 22:46:24',11.94),(1,'2020-03-24 22:46:22',11.94),(1,'2020-03-25 22:46:24',11.94),(1,'2020-03-25 21:46:22',11.94),(3,'2020-02-23 22:46:24',13.93),(1,'2020-03-24 22:46:22', 19.9),(1,'2020-03-25 22:46:24',21.89),(1,'2020-03-25 21:46:22', 23.88),(1,'2020-05-02 22:27:30',4.99),(1,'2020-05-02 22:27:30',5.97);
insert into purchase (barcode_id,quantity) values (4 ,2),(2 ,1),(3 ,2),(2 ,1),(3 ,2),(1 ,6),(4 ,3),(2 ,2),(4 ,2),(4 ,6),(4 ,6),(2 ,6),(4 ,6),(2 ,6),(4 ,7),(2 ,10),(4 ,11),(2 ,12),(2 , 1),(4 , 3);



Queries used


SELECT * FROM customers;
SELECT * FROM items;
select cid, barcode_id, b.item_name, quantity, b.unit_price, b.taxable from shoppingcart as a join (select barcode_id as item_id ,item_name, unit_price,taxable from items) as b on b.item_id=barcode_id and cid=1;
select cid, barcode_id,item_name, quantity from shoppingcart join (select barcode_id as item_id, item_name from items) as b where item_id=barcode_id;
DELETE FROM shoppingcart WHERE cid=1 and barcode_id=1;
UPDATE shoppingcart SET quantity=2 where barcode_id=2 and cid=2;
SELECT barcode_id,item_name,cases_in_stock,num_lb_in_case, remain_not_in_case FROM items;


INSERT INTO transaction (cid ,total_price) values (1,4.99);
INSERT INTO purchase (barcode_id,quantity) values (2,1);
INSERT INTO purchase_history(purchase_id , transaction_id) values ((select count(*) as an from purchase), (select count(*) as an from transaction));


select item_name, items.barcode_id,item_company_name, item_company_phone from items join item_company_key on items.barcode_id=item_company_key.barcode_id join company on company.company_id=item_company_key.company_id;
select c.barcode_id as item, sum(c.quantity) as sum, c.date from (select barcode_id, quantity, DATE_FORMAT(payment_date, '%Y-%m') as date from transaction join purchase_history on transaction.transaction_id = purchase_history.transaction_id join purchase on purchase.purchase_id = purchase_history.purchase_id and barcode_id='4') as c group by c.date;
select c.barcode_id as item, sum(c.quantity) as sum, c.date from (select barcode_id, quantity, DATE_FORMAT(payment_date, '%Y-%m-%d') as date from transaction join purchase_history on transaction.transaction_id = purchase_history.transaction_id join purchase on purchase.purchase_id = purchase_history.purchase_id and barcode_id='4' and (transaction.payment_date BETWEEN '2020-04-15' AND '2020-04-30')) as c group by c.date;


For month Graph:
select c.barcode_id as item, sum(c.quantity) as sum, c.date from (select purchase.barcode_id, purchase.quantity, DATE_FORMAT(transaction.payment_date, '%Y-%m') as date from purchase join transaction on purchase.purchase_id=transaction.purchase_id and barcode_id='4') as c group by c.date;

 item | sum  | date    |
+------+------+---------+
|    4  |    7   | 2020-02 |
|    4  |   23  | 2020-03 |
|    4  |   13  | 2020-04 |
|    4  |    3   | 2020-05 |
+------+------+---------+


select purchase.barcode_id, purchase.quantity, DATE_FORMAT(transaction.payment_date, '%Y-%m') as date from purchase join transaction on purchase.purchase_id=transaction.purchase_id and barcode_id='4'
+------------+----------+---------+
| barcode_id | quantity | date    |
+------------+----------+---------+
|             4 |        2 | 2020-04 |
|             4 |        3 | 2020-04 |
|             4 |        2 | 2020-04 |
|             4 |        6 | 2020-04 |
|             4 |        6 | 2020-03 |
|             4 |        6 | 2020-03 |
|             4 |        7 | 2020-02 |
|             4 |       11 | 2020-03 |
|             4 |        3 | 2020-05 |
+------------+----------+---------+




 For daily Graph :
select c.barcode_id as item, sum(c.quantity) as sum, c.date from (select purchase.barcode_id, purchase.quantity, DATE_FORMAT(transaction.payment_date, '%Y-%m-%d') as date from purchase join transaction on purchase.purchase_id=transaction.purchase_id and barcode_id='4' and (transaction.payment_date BETWEEN '2020-04-15' AND '2020-04-30')) as c group by c.date;


+------+------+------------+
| item | sum  | date       |
+------+------+------------+
|    4 |    8 | 2020-04-23 |
|    4 |    5 | 2020-04-26 |
+------+------+------------+


Other queries used:
Add new customer
insert into customers (username,email,passowrd,,phone) values (James, qwe@gmail.com,909, 18723, 7180983892);
INSERT INTO address (street_address, state, zipcode)  VALUES (108 38 St, NY,12345);
For shoppingcart:
INSERT INTO shoppingcart (cid,barcode_id,quantity) VALUES (1, 2, 5);
DELETE FROM shoppingcart WHERE cid=1 and barcode_id=1;
To update items in stock after a customer pays:
UPDATE items SET cases_in_stock= 14 where item_name='Bounty;
To add more items in stock after new importation:
UPDATE items SET cases_in_stock= 20 where barcode_id=4;
